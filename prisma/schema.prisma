// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @unique
  email        String
  firstName    String
  lastName     String
  profileImage String

  orders Order[]

  createdAt DateTime @default(now())
}

model Product {
  id          String             @id @default(uuid())
  name        String
  description String
  status      ProductStatus
  price       Int
  images      String[]
  category    Category
  isFeatured  Boolean            @default(false)
  quantity    Int
  orders      OrdersOnProducts[]

  createdAt DateTime @default(now())
}

model Banner {
  id          String @id @default(uuid())
  title       String
  imageString String

  createdAt DateTime @default(now())
}

model Order {
  id     String @id @default(uuid())
  status String @default("pending")
  amount Int

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  createdAt DateTime           @default(now())
  products  OrdersOnProducts[]
}

model OrdersOnProducts {
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  assignedAt DateTime @default(now())

  @@id([orderId, productId])
}

enum ProductStatus {
  draft
  published
  archived
}

enum Category {
  diamond
  gold
  silver
}
